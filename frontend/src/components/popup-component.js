import appConstants from '../common/constants'
import { goTo } from '../router'
import { getArchive } from '../api/endpoints'


class PopUpComponent extends HTMLElement {
    constructor() {
        super()
        const shadow = this.attachShadow({ mode: 'open' })
        const wrapper = document.createElement('div')
        wrapper.setAttribute('class', 'popup-overlay')
        wrapper.innerHTML = `
            <div class="popup-container">
                <div class="popup-content"></div>
                <button class="submit-button position-right" data-action="close">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        `
        const style = document.createElement('style')

        style.textContent = `
            .popup-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100vw;
                height: 100vh;
                background: rgba(0, 0, 0, 0.5);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
            }

            .popup-container {
                background: white;
                padding: 1rem 4rem 4rem;
                border-radius: 10px;
                max-width: 90vw;
                max-height: 90vh;
                overflow: auto;
                position: relative;
                box-shadow: 0 10px 20px rgba(0,0,0,0.3);
            }

            .submit-button {
                position: absolute;    
                padding: 10px 20px;
                font-size: 18px;
                background-color: ${appConstants.custom_color.green};
                color: white;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: background-color 0.3s, transform 0.2s;
                height: 41px;
                bottom: 1rem;
            }

            .position-right {
                right: 1rem;
            }

            .position-left {
                left: 1rem;
            }
            
            .submit-button:hover {
                background-color: ${appConstants.custom_color.light_green};
            }
            
            .submit-button:active {
                transform: scale(0.98);
            }

            p a {
                color:rgb(11, 12, 14);
                text-decoration: none;
                transition: color 0.2s ease, border-color 0.2s ease;
                border-bottom: 1px dashed rgb(11, 12, 14);
            }

            p a:focus,
            p a:hover {
                outline: none;
                color: ${appConstants.custom_color.link_blue};
                border-bottom: 1px dashed ${appConstants.custom_color.link_blue};
            }


            p a:active {
                color:${appConstants.custom_color.red};
                border-bottom: 1px dashed ${appConstants.custom_color.red};
            }

            .archive-list {
                max-height: 400px;         /* –∏–ª–∏ 60vh ‚Äî –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
                overflow-y: auto;
                padding: 16px;
                display: flex;
                flex-direction: column;
                gap: 12px;

                background-color: #f9f9f9;
                border-radius: 12px;
                box-shadow: 0 0 12px rgba(0,0,0,0.1);
            }

            /* –°—Ç–∏–ª–∏ –ø–ª–∏—Ç–∫–∏ */
            .archive-tile {
                display: block;
                padding: 14px 18px;
                background-color: #e7ffe7;
                border-left: 6px solid #28a745;
                border-radius: 8px;
                color: #222;
                text-decoration: none;
                font-weight: 500;
                transition: background-color 0.2s, transform 0.1s;
            }

            .archive-tile:hover {
                background-color: #d9fdd9;
                transform: translateX(3px);
            }

            .loader {
                text-align: center;
                padding: 10px;
                font-size: 14px;
                color: #888;
            }

            .hidden {
                display: none;
            }
        `

        shadow.appendChild(style)
        shadow.appendChild(wrapper)

    }

    connectedCallback() {
        const shadow = this.shadowRoot
        const wrapper = shadow.querySelector(".popup-overlay")
        wrapper.addEventListener('click', (e) => {
            if (e.target === wrapper) {
                this.remove()
            }
        })

        wrapper.querySelector('button[data-action="close"]').addEventListener('click', () => {
            this.remove()
        })
    }

    renderRules() {
        const shadow = this.shadowRoot
        const content = shadow.querySelector(".popup-content")
        content.innerHTML = `
        <h2>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã</h2>
        <p>
            <b>–¶–µ–ª—å –∏–≥—Ä—ã:</b><br>
            –£–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –ø—è—Ç–∏–±—É–∫–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∑–∞ 6 –ø–æ–ø—ã—Ç–æ–∫.<br><br>
            –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –±—É–∫–≤—ã –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—é—Ç—Å—è —Ü–≤–µ—Ç–æ–º:<br>
            <b><span style="color: ${appConstants.custom_color.green};">–ó–µ–ª–µ–Ω—ã–π:</span></b> –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ.<br>
            <b><span style="color: ${appConstants.custom_color.yellow};">–ñ–µ–ª—Ç—ã–π:</span></b> –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ, –Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ.<br>
            <b><span style="color: ${appConstants.custom_color.red};">–ö—Ä–∞—Å–Ω—ã–π:</span></b> –±—É–∫–≤–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ.<br><br>
            <a href="/daily"><b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∏–≥—Ä–∞:</b></a> –í Wordle –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç—Å—è –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Å–ª–æ–≤–æ –¥–Ω—è –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤.<br> 
            <a href="/create"><b>–°–≤–æ—è –∏–≥—Ä–∞:</b></a> –ó–∞–≥–∞–¥–∞–π –í Wordle —Å–≤–æ–µ —Å–ª–æ–≤–æ –∏ –ø–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏.<br> 
            <b>–°–ª—É—á–∞–π–Ω–∞—è –∏–≥—Ä–∞:</b> –í Wordle –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è –∏–≥—Ä–æ–∫–∞.<br> 

        </p>
        `

    }

    renderResults() {
        let copy_text = `
        –Ø —Ä–∞–∑–≥–∞–¥–∞–ª(a) 5-–±—É–∫–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Å 3/6 –ø–æ–ø—ã—Ç–æ–∫. 

        ‚¨õ‚¨õ‚¨õüü®üü©
        üü®‚¨õ‚¨õüü®üü©
        üü©üü©üü©üü©üü©

        –°–º–æ–∂–µ—à—å –ª–∏ —Ç—ã —Ä–∞–∑–≥–∞–¥–∞—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ? 
        ${url}
        `
        this.innerHTML = ``
    }

    renderGotoAlert(path) {
        const shadow = this.shadowRoot
        const content = shadow.querySelector(".popup-content")
        content.innerHTML = `
        <h2>–í—ã –ø–æ–∫–∏–¥–∞–µ—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–≥—Ä—ã!</h2>
        <p>
            –ü–æ—Å–ª–µ —É—Ö–æ–¥–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–≥—Ä—ã –±—É–¥–µ—Ç —É—Ç–µ—Ä—è–Ω. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?
        </p>
        <button class="submit-button position-left" data-action="goto">–£–π—Ç–∏</button>
        `

        content.querySelector('button[data-action="goto"]').addEventListener('click', () => {
            goTo(path)
        })
    }

    async renderArchiveGames() {
        this.archivePage = 1
        this.isLoading = false
        this.hasMore = true

        const shadow = this.shadowRoot
        const content = shadow.querySelector(".popup-content")
        content.innerHTML = `
        <h2>–ê—Ä—Ö–∏–≤–Ω—ã–µ –∏–≥—Ä—ã</h2>
        <div class="archive-list"></div>        
        <div id="loader" class="loader hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        `
        await this.loadArchivePage(this.archivePage)
        
        const observer = new IntersectionObserver(async (entries) => {
            if (entries[0].isIntersecting) {
                this.archivePage++
                await this.loadArchivePage(this.archivePage)
            }
        }, {
            root: content,
            threshold: 1.0
        }) // TODO test new archive pages loading
        observer.observe(shadow.querySelector(".loader"))
    }

    async loadArchivePage() {
        if (this.isLoading || !this.hasMore) return
        this.isLoading = true
        const shadow = this.shadowRoot
        const loader = shadow.querySelector('.loader')
        const archiveList = shadow.querySelector('.archive-list')
        loader.classList.remove('hidden')
        const archiveResponse = await getArchive(this.archivePage)
        if (archiveResponse.ok) {
            if (archiveResponse.data.length === 0 && this.archivePage === 1) {
                archiveList.textContent = "–ê—Ä—Ö–∏–≤–Ω—ã—Ö –∏–≥—Ä –ø–æ–∫–∞ –Ω–µ—Ç :("
                this.hasMore = false
            } else if (archiveResponse.data.length === 0) {
                this.hasMore = false
                loader.textContent = '–ë–æ–ª—å—à–µ –∏–≥—Ä –Ω–µ—Ç'
                return
            }
            archiveResponse.data.forEach(game => {
                const tile = document.createElement('a');
                tile.className = 'archive-tile'
                tile.href = `games/${game.game_uuid}`
                tile.textContent = `–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∏–≥—Ä–∞ –æ—Ç ${game.game_date}`
                archiveList.appendChild(tile)
            })
        } else {
            const error_text = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ö–∏–≤–∞'
            console.error(error_text)
            loader.textContent = error_text
            this.hasMore = false
        }
        this.isLoading = false;
        loader.classList.add('hidden')
    }
}


customElements.define('pop-up', PopUpComponent)